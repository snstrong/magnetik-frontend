{"version":3,"sources":["homepage/Homepage.js","auth/RegisterForm.js","auth/LoginForm.js","common/Alert.js","api/MagnetikApi.js","auth/UserContext.js","profiles/ProfileForm.js","hooks/useLocalStorage.js","writespace/Writespace.js","routes-nav/ProtectedRoute.js","routes-nav/Routes.js","routes-nav/Navigation.js","App.js","reportWebVitals.js","index.js"],"names":["Homepage","className","href","RegisterForm","register","history","useHistory","INITIAL_STATE","username","password","firstName","lastName","email","useState","formData","setFormData","handleChange","evt","target","name","value","fData","a","preventDefault","res","success","push","console","error","errors","onSubmit","htmlFor","autoComplete","id","onChange","type","LoginForm","login","required","Alert","messages","debug","role","map","BASE_URL","process","MagnetikApi","endpoint","data","method","url","headers","Authorization","token","params","axios","response","message","Array","isArray","this","request","user","field","patchData","length","wordList","UserContext","React","createContext","ProfileForm","useContext","currentUser","setCurrentUser","formErrors","setFormErrors","saveConfirmed","setSaveConfirmed","profileData","updateCurrentUser","updatedUser","f","onClick","useLocalStorage","key","firstValue","initialValue","localStorage","getItem","item","setItem","useEffect","removeItem","Writespace","wordTiles","setWordTiles","stageBgFill","tileBgFill","tileStroke","tileFontSize","tileHeight","stageWidth","window","innerWidth","stageHeight","innerHeight","konvaStyles","reset","setReset","alert","setAlert","tileCoord","dimension","max","Math","floor","random","makeTileObj","wordLength","word","x","y","width","round","isDragging","handleDragStart","e","tiles","JSON","parse","stringify","handleDragEnd","newX","newY","getWordList","fetchWordList","then","wordObj","tile","style","backgroundColor","setTimeout","height","fill","tileArr","draggable","onDragStart","onDragEnd","scaleX","scaleY","stroke","text","align","fontSize","fontFamily","offsetY","renderWordTiles","ProtectedRoute","exact","path","children","to","Routes","Navigation","logout","App","isLoaded","setIsLoaded","setToken","signUpData","userToken","loginData","jwt","decode","getCurrentUser","currUser","Provider","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.15e2ad04.chunk.js","sourcesContent":["import \"./Homepage.css\";\n\nfunction Homepage() {\n  return (\n    <div className=\"Homepage\">\n      <div className=\"container p-5\">\n        <div className=\"row\">\n          <div className=\"col-md-8 mx-auto my-auto p-5\">\n            <h1 className=\"Homepage-brand\">Magnetik</h1>\n            <h2 className=\"Homepage-tagline pb-3\">\n              Leave your word choice to chance.\n            </h2>\n            <a className=\"btn btn-primary\" href=\"/writespace\">\n              Write a Poem\n            </a>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Homepage;\n","/** Form component for registering a user. \n * \n * Required form inputs:\n * {\n\t\"username\": \"this_is_user\",\n\t\"password\": \"password\",\n\t\"firstName\": \"First\",\n\t\"lastName\": \"Last\",\n\t\"email\": \"emailme@gmail.com\"\n}\n*/\n\nimport { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nfunction RegisterForm({ register }) {\n  const history = useHistory();\n  const INITIAL_STATE = {\n    username: \"\",\n    password: \"\",\n    firstName: \"\",\n    lastName: \"\",\n    email: \"\",\n  };\n  let [formData, setFormData] = useState(INITIAL_STATE);\n\n  const handleChange = (evt) => {\n    const { name, value } = evt.target;\n    setFormData((fData) => ({\n      ...formData,\n      [name]: value,\n    }));\n  };\n\n  async function handleSubmit(evt) {\n    evt.preventDefault();\n    let res = await register(formData);\n    if (res.success === true) {\n      setFormData(INITIAL_STATE);\n      history.push(`/writespace`);\n    } else {\n      console.error(\"Registration failed\", res.errors);\n    }\n  }\n\n  return (\n    <div className=\"RegisterForm container\">\n      <h1>Sign Up</h1>\n      <form onSubmit={handleSubmit}>\n        <div className=\"mb-3\">\n          <label className=\"form-label\" htmlFor=\"username\">\n            Username\n          </label>\n          <input\n            autoComplete=\"username\"\n            className=\"form-control\"\n            id=\"username\"\n            name=\"username\"\n            onChange={handleChange}\n            value={formData.username}\n          />\n        </div>\n\n        <div className=\"mb-3\">\n          <label className=\"form-label\" htmlFor=\"password\">\n            Password\n          </label>\n          <input\n            autoComplete=\"new-password\"\n            type=\"password\"\n            id=\"password\"\n            name=\"password\"\n            onChange={handleChange}\n            value={formData.password}\n            className=\"form-control\"\n          />\n        </div>\n\n        <div className=\"mb-3\">\n          <label className=\"form-label\" htmlFor=\"firstName\">\n            First Name\n          </label>\n          <input\n            id=\"firstName\"\n            name=\"firstName\"\n            onChange={handleChange}\n            value={formData.firstName}\n            className=\"form-control\"\n          />\n        </div>\n\n        <div className=\"mb-3\">\n          <label className=\"form-label\" htmlFor=\"lastName\">\n            Last Name\n          </label>\n          <input\n            id=\"lastName\"\n            name=\"lastName\"\n            onChange={handleChange}\n            value={formData.lastName}\n            className=\"form-control\"\n          />\n        </div>\n\n        <div className=\"mb-3\">\n          <label className=\"form-label\" htmlFor=\"email\">\n            Email\n          </label>\n          <input\n            type=\"email\"\n            id=\"email\"\n            name=\"email\"\n            onChange={handleChange}\n            value={formData.email}\n            className=\"form-control\"\n          />\n        </div>\n\n        <button className=\"btn btn-primary\">Submit</button>\n      </form>\n    </div>\n  );\n}\n\nexport default RegisterForm;\n","/** Form component for user login. \n * \n * Required form inputs:\n * {\n\t\"username\": \"this_is_user\",\n\t\"password\": \"password\"\n }\n*/\n\nimport { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nfunction LoginForm({ login }) {\n  const history = useHistory();\n\n  const INITIAL_STATE = {\n    username: \"\",\n    password: \"\",\n  };\n\n  let [formData, setFormData] = useState(INITIAL_STATE);\n\n  const handleChange = (evt) => {\n    const { name, value } = evt.target;\n    setFormData((fData) => ({\n      ...formData,\n      [name]: value,\n    }));\n  };\n\n  async function handleSubmit(evt) {\n    evt.preventDefault();\n    let res = await login(formData);\n    res.success ? history.push(\"/writespace\") : console.error(res.errors);\n  }\n\n  return (\n    <div className=\"LoginForm container\">\n      <h2>Login</h2>\n      <form onSubmit={handleSubmit}>\n        <div className=\"mb-3\">\n          <label className=\"form-label\" htmlFor=\"username\">\n            Username\n          </label>\n          <input\n            autoComplete=\"username\"\n            className=\"form-control\"\n            id=\"username\"\n            name=\"username\"\n            value={formData.username}\n            onChange={handleChange}\n            required\n          />\n        </div>\n        <div className=\"mb-3\">\n          <label className=\"form-label\" htmlFor=\"password\">\n            Password\n          </label>\n          <input\n            autoComplete=\"current-password\"\n            className=\"form-control\"\n            type=\"password\"\n            id=\"password\"\n            name=\"password\"\n            value={formData.password}\n            onChange={handleChange}\n            required\n          />\n        </div>\n        <button className=\"btn btn-primary\">Submit</button>\n      </form>\n    </div>\n  );\n}\n\nexport default LoginForm;\n","import React from \"react\";\n\n/** Presentational component for showing bootstrap-style alerts.\n *\n * { LoginForm, SignupForm, ProfileForm } -> Alert\n **/\n\nfunction Alert({ type = \"danger\", messages = [] }) {\n  console.debug(\"Alert\", \"type=\", type, \"messages=\", messages);\n\n  return (\n    <div className={`alert alert-${type}`} role=\"alert\">\n      {messages.map((error) => (\n        <p className=\"mb-0 small\" key={error}>\n          {error}\n        </p>\n      ))}\n    </div>\n  );\n}\n\nexport default Alert;\n","import axios from \"axios\";\n\nconst BASE_URL = process.env.REACT_APP_BASE_URL || \"http://localhost:3001\";\n\n/** API Class.\n *\n * Static class tying together methods used to get/send to to the API.\n *\n */\n\nclass MagnetikApi {\n  static token;\n\n  static async request(endpoint, data = {}, method = \"get\") {\n    // console.debug(\"API Call:\", endpoint, data, method);\n    const url = `${BASE_URL}/${endpoint}`;\n    const headers = { Authorization: `Bearer ${MagnetikApi.token}` };\n    const params = method === \"get\" ? data : {};\n\n    try {\n      return (await axios({ url, method, data, params, headers })).data;\n    } catch (err) {\n      console.error(\"API Error:\", err.response);\n      let message = err.response.data.error.message;\n      throw Array.isArray(message) ? message : [message];\n    }\n  }\n\n  //////////////////////////////\n  /** Individual API requests */\n  //////////////////////////////\n\n  // Auth Requests\n\n  /** Register a user. Returns JWT. */\n\n  static async register(data) {\n    let res = await this.request(`auth/register`, data, \"post\");\n    MagnetikApi.token = res.token;\n    return res.token;\n  }\n\n  /** Logs in a user. Returns JWT. */\n\n  static async login(data) {\n    let res = await this.request(`auth/token`, data, \"post\");\n    MagnetikApi.token = res.token;\n    return res.token;\n  }\n\n  // User Requests\n\n  static async getCurrentUser(username) {\n    let res = await this.request(`users/${username}`);\n    return res.user;\n  }\n\n  static async updateCurrentUser(username, data) {\n    let patchData = {};\n    for (let field in data) {\n      if (data[field].length > 0) {\n        patchData[field] = data[field];\n      }\n    }\n    let res = await this.request(`users/${username}`, patchData, \"patch\");\n    return res.user;\n  }\n\n  static async getWordList() {\n    let res = await this.request(`writespace`);\n    return res.wordList;\n  }\n}\n\nexport default MagnetikApi;\n","import React from \"react\";\n\n/** Context: provides currentUser object and setter for it throughout app. */\n\nconst UserContext = React.createContext();\n\nexport default UserContext;\n","import React, { useState, useContext } from \"react\";\nimport Alert from \"../common/Alert\";\nimport MagnetikApi from \"../api/MagnetikApi\";\nimport UserContext from \"../auth/UserContext\";\n\n// eslint-disable-next-line\n// import useTimedMessage from \"../hooks/useTimedMessage\";\n\n/** Profile editing form.\n *\n * Displays profile form and handles changes to local form state.\n * Submitting the form calls the API to save, and triggers user reloading\n * throughout the site.\n *\n * Confirmation of a successful save is normally a simple <Alert>, but\n * you can opt-in to our fancy limited-time-display message hook,\n * `useTimedMessage`, but switching the lines below.\n *\n * Routed as /profile\n * Routes -> ProfileForm -> Alert\n */\n\nfunction ProfileForm() {\n  const { currentUser, setCurrentUser } = useContext(UserContext);\n  console.debug(\"User:\", currentUser);\n  const [formData, setFormData] = useState({\n    firstName: currentUser.firstName,\n    lastName: currentUser.lastName,\n    email: currentUser.email,\n    username: currentUser.username,\n    password: \"\",\n  });\n  const [formErrors, setFormErrors] = useState([]);\n\n  // switch to use our fancy limited-time-display message hook\n  const [saveConfirmed, setSaveConfirmed] = useState(false);\n  // const [saveConfirmed, setSaveConfirmed] = useTimedMessage()\n\n  console.debug(\n    \"ProfileForm\",\n    \"currentUser=\",\n    currentUser,\n    \"formData=\",\n    formData,\n    \"formErrors=\",\n    formErrors,\n    \"saveConfirmed=\",\n    saveConfirmed\n  );\n\n  /** on form submit:\n   * - attempt save to backend & report any errors\n   * - if successful\n   *   - clear previous error messages and password\n   *   - show save-confirmed message\n   *   - set current user info throughout the site\n   */\n\n  async function handleSubmit(evt) {\n    evt.preventDefault();\n\n    let profileData = {\n      firstName: formData.firstName,\n      lastName: formData.lastName,\n      email: formData.email,\n      password: formData.password,\n    };\n\n    let username = formData.username;\n    let updatedUser;\n\n    try {\n      updatedUser = await MagnetikApi.updateCurrentUser(username, profileData);\n    } catch (errors) {\n      debugger;\n      setFormErrors(errors);\n      return;\n    }\n\n    setFormData((f) => ({ ...f, password: \"\" }));\n    setFormErrors([]);\n    setSaveConfirmed(true);\n\n    // trigger reloading of user information throughout the site\n    setCurrentUser(updatedUser);\n  }\n\n  /** Handle form data changing */\n  function handleChange(evt) {\n    const { name, value } = evt.target;\n    setFormData((f) => ({\n      ...f,\n      [name]: value,\n    }));\n    setFormErrors([]);\n  }\n\n  return (\n    <div className=\"col-md-6 col-lg-4 offset-md-3 offset-lg-4\">\n      <h3>Profile</h3>\n      <div className=\"card\">\n        <div className=\"card-body\">\n          <form>\n            <div className=\"form-group\">\n              <label>Username</label>\n              <p className=\"form-control-plaintext\">{formData.username}</p>\n            </div>\n            <div className=\"form-group\">\n              <label>First Name</label>\n              <input\n                name=\"firstName\"\n                className=\"form-control\"\n                value={formData.firstName}\n                onChange={handleChange}\n              />\n            </div>\n            <div className=\"form-group\">\n              <label>Last Name</label>\n              <input\n                name=\"lastName\"\n                className=\"form-control\"\n                value={formData.lastName}\n                onChange={handleChange}\n              />\n            </div>\n            <div className=\"form-group\">\n              <label>Email</label>\n              <input\n                name=\"email\"\n                className=\"form-control\"\n                value={formData.email}\n                onChange={handleChange}\n              />\n            </div>\n            <div className=\"form-group\">\n              <label>Confirm password to make changes:</label>\n              <input\n                type=\"password\"\n                name=\"password\"\n                className=\"form-control\"\n                value={formData.password}\n                onChange={handleChange}\n              />\n            </div>\n\n            {formErrors.length ? (\n              <Alert type=\"danger\" messages={formErrors} />\n            ) : null}\n\n            {saveConfirmed ? (\n              <Alert type=\"success\" messages={[\"Updated successfully.\"]} />\n            ) : null}\n\n            <button\n              className=\"btn btn-primary btn-block mt-4\"\n              onClick={handleSubmit}\n            >\n              Save Changes\n            </button>\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default ProfileForm;\n","import { useState, useEffect } from \"react\";\n\n/** Custom hook for keeping state data synced with localStorage.\n *\n * This creates `item` as state and look in localStorage for current value\n * (if not found, defaults to `firstValue`)\n *\n * When `item` changes, effect re-runs:\n * - if new state is null, removes from localStorage\n * - else, updates localStorage\n *\n * To the component, this just acts like state that is also synced to/from\n * localStorage::\n *\n * const [myThing, setMyThing] = useLocalStorage(\"myThing\")\n */\n\nfunction useLocalStorage(key, firstValue = null) {\n  const initialValue = localStorage.getItem(key) || firstValue;\n\n  const [item, setItem] = useState(initialValue);\n\n  useEffect(\n    function setKeyInLocalStorage() {\n      // console.debug(\"hooks useLocalStorage useEffect\", \"item=\", item);\n\n      if (item === null) {\n        localStorage.removeItem(key);\n      } else {\n        localStorage.setItem(key, item);\n      }\n    },\n    [key, item]\n  );\n\n  return [item, setItem];\n}\n\nexport default useLocalStorage;\n","import { useState, useEffect, useContext } from \"react\";\nimport MagnetikApi from \"../api/MagnetikApi\";\nimport { Stage, Group, Layer, Text, Rect } from \"react-konva\";\n// import { Portal } from \"react-konva-utils\";\nimport useLocalStorage from \"../hooks/useLocalStorage\";\nimport UserContext from \"../auth/UserContext\";\nimport Alert from \"../common/Alert\";\n\n/** TODO:\n * - Saving to db for logged-in user\n * - Allow user to name writespace, provide default \"Untitled [1,2...]\"\n * - Export as image\n * - Separate layers for poem and unused word tiles with Portal\n * - Improve initial spacing between tiles\n * - Improve Stage sizing (evt listener for window size change, add mins)\n * - Resize font, tiles for small screens\n * - Options to fetch more words, shuffle positions, clear and get a new word list\n * - Allow user to update styles\n */\n\nfunction Writespace() {\n  const { currentUser } = useContext(UserContext);\n  const [wordTiles, setWordTiles] = useLocalStorage(\"wordTiles\");\n  const [konvaStyles, setKonvaStyles] = useState({\n    stageBgFill: \"#d4dddd\",\n    tileBgFill: \"white\",\n    tileStroke: \"#555\",\n    tileFontSize: 16,\n    tileHeight: 30,\n    stageWidth: window.innerWidth,\n    stageHeight: window.innerHeight,\n  });\n  const [reset, setReset] = useState(false);\n  const [alert, setAlert] = useState(null);\n\n  function calcTileSize(wordLength) {\n    return wordLength <= 2\n      ? wordLength * konvaStyles.tileFontSize\n      : Math.round(wordLength * konvaStyles.tileFontSize * 0.75);\n  }\n\n  function tileCoord(dimension) {\n    let min = 20;\n    let max = dimension - 20;\n    return Math.floor(Math.random() * (max - min) + min);\n  }\n\n  function makeTileObj({ id, word }) {\n    return {\n      word: word,\n      id: id,\n      x: tileCoord(konvaStyles.stageWidth),\n      y: tileCoord(konvaStyles.stageHeight),\n      width: calcTileSize(word.length),\n      isDragging: false,\n    };\n  }\n\n  const handleDragStart = (e) => {\n    const id = e.target.id();\n    const tiles = {\n      ...JSON.parse(wordTiles),\n      [id]: {\n        ...JSON.parse(wordTiles)[id],\n        isDragging: true,\n      },\n    };\n\n    setWordTiles(JSON.stringify({ ...tiles }));\n  };\n\n  const handleDragEnd = (e) => {\n    const id = e.target.id();\n    const newX = e.target.x();\n    const newY = e.target.y();\n    const tiles = {\n      ...JSON.parse(wordTiles),\n      [id]: {\n        ...JSON.parse(wordTiles)[id],\n        x: newX,\n        y: newY,\n        isDragging: false,\n      },\n    };\n\n    setWordTiles(JSON.stringify({ ...tiles }));\n  };\n\n  function renderWordTiles(tiles) {\n    let tileArr = [];\n    for (let id in tiles) {\n      tileArr.push(\n        <Group\n          draggable\n          id={`${id}`}\n          key={`${id}`}\n          x={tiles[id][\"x\"]}\n          y={tiles[id][\"y\"]}\n          onDragStart={handleDragStart}\n          onDragEnd={handleDragEnd}\n          scaleX={tiles[id][\"isDragging\"] ? 1.05 : 1}\n          scaleY={tiles[id][\"isDragging\"] ? 1.05 : 1}\n        >\n          <Rect\n            width={tiles[id][\"width\"]}\n            height={konvaStyles.tileHeight}\n            fill=\"white\"\n            stroke=\"#555\"\n          />\n          <Text\n            text={tiles[id][\"word\"]}\n            width={tiles[id][\"width\"]}\n            align=\"center\"\n            fontSize={konvaStyles.tileFontSize}\n            fontFamily=\"monospace\"\n            offsetY={-8}\n          />\n        </Group>\n      );\n    }\n    return tileArr;\n  }\n\n  async function fetchWordList() {\n    try {\n      let wordList = await MagnetikApi.getWordList();\n      return wordList;\n    } catch (err) {\n      console.error(\"Writespace fetchWordList\", err);\n    }\n  }\n\n  useEffect(\n    function loadWordList() {\n      // console.debug(\"Writespace useEffect loadWordList wordTiles=\", wordTiles);\n      if (!wordTiles || reset === true) {\n        fetchWordList().then((res) => {\n          let tiles = {};\n          for (let wordObj of res) {\n            let tile = makeTileObj(wordObj);\n            tiles[wordObj[\"id\"]] = tile;\n          }\n          setWordTiles(JSON.stringify({ ...tiles }));\n        });\n      }\n      setReset(false);\n    },\n    [reset]\n  );\n\n  function scramble() {\n    const tiles = { ...JSON.parse(wordTiles) };\n\n    for (let id in tiles) {\n      tiles[id] = {\n        ...JSON.parse(wordTiles)[id],\n        x: tileCoord(konvaStyles.stageWidth),\n        y: tileCoord(konvaStyles.stageHeight),\n      };\n    }\n    setWordTiles(JSON.stringify({ ...tiles }));\n  }\n\n  if (!wordTiles) return <h1>Loading...</h1>;\n\n  return (\n    <div className=\"Writespace\">\n      <div\n        className=\"Writespace-options p-3 container-fluid\"\n        style={{ backgroundColor: \"#8da5a5\" }}\n      >\n        <div className=\"row\">\n          {currentUser && (\n            <button\n              type=\"submit\"\n              className=\"btn btn-primary col-2 col-md-4 col-sm-6\"\n              onClick={() => {\n                setAlert(true);\n                setTimeout(() => setAlert(false), 2000);\n              }}\n            >\n              Save\n            </button>\n          )}\n          <button\n            type=\"reset\"\n            className=\"btn btn-secondary col-2 col-md-4 col-sm-6\"\n            onClick={() => setReset(true)}\n          >\n            Reset\n          </button>\n          <button\n            type=\"reset\"\n            className=\"btn btn-light col-2 col-md-4 col-sm-6\"\n            onClick={scramble}\n          >\n            Scramble\n          </button>\n        </div>\n        {alert && (\n          <Alert\n            messages={[\"Currently unavailable. Please try again later.\"]}\n          ></Alert>\n        )}\n      </div>\n      <Stage width={window.innerWidth} height={window.innerHeight}>\n        <Layer>\n          <Rect\n            fill={konvaStyles.stageBgFill || \"#b6bbc2\"}\n            width={window.innerWidth}\n            height={window.innerHeight}\n          />\n          {wordTiles && renderWordTiles(JSON.parse(wordTiles))}\n        </Layer>\n      </Stage>\n    </div>\n  );\n}\n\nexport default Writespace;\n","import React, { useContext } from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport UserContext from \"../auth/UserContext\";\n\n/** ProtectedRoute Component\n * Checks for current user before allowing access to routes that require authorization.\n * Redirects to login form if no user found.\n */\n\nfunction ProtectedRoute({ exact, path, children }) {\n  const { currentUser } = useContext(UserContext);\n\n  // console.debug(\n  //   \"ProtectedRoute\",\n  //   \"exact=\",\n  //   exact,\n  //   \"path=\",\n  //   path,\n  //   \"currentUser=\",\n  //   currentUser\n  // );\n\n  if (!currentUser) return <Redirect to=\"/login\" />;\n\n  return (\n    <Route exact={exact} path={path}>\n      {children}\n    </Route>\n  );\n}\n\nexport default ProtectedRoute;\n","import React from \"react\";\nimport { Switch, Route, Redirect } from \"react-router-dom\";\nimport Homepage from \"../homepage/Homepage\";\nimport RegisterForm from \"../auth/RegisterForm\";\nimport LoginForm from \"../auth/LoginForm\";\nimport ProfileForm from \"../profiles/ProfileForm\";\nimport Writespace from \"../writespace/Writespace\";\nimport ProtectedRoute from \"./ProtectedRoute\";\n\n/** Site-wide routes */\n\nfunction Routes({ login, register }) {\n  // console.debug(\n  //   \"Routes\",\n  //   `login=${typeof login}`,\n  //   `register=${typeof register}`\n  // );\n\n  return (\n    <div>\n      <Switch>\n        <Route exact path=\"/\">\n          <Homepage />\n        </Route>\n        <Route exact path=\"/login\">\n          <LoginForm login={login} />\n        </Route>\n        <Route exact path=\"/signup\">\n          <RegisterForm register={register} />\n        </Route>\n        <ProtectedRoute exact path=\"/profile\">\n          <ProfileForm />\n        </ProtectedRoute>\n        <Route exact path=\"/writespace\">\n          <Writespace />\n        </Route>\n        <Redirect to=\"/\" />\n      </Switch>\n    </div>\n  );\n}\n\nexport default Routes;\n","import React, { useContext } from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport UserContext from \"../auth/UserContext\";\n\nfunction Navigation({ logout }) {\n  const { currentUser } = useContext(UserContext);\n  // console.debug(\"Navigation\", \"currentUser=\", currentUser);\n\n  function loggedInNav() {\n    return (\n      <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\n        <li className=\"nav-item\">\n          <NavLink className=\"nav-link\" to=\"./writespace\">\n            Writespace\n          </NavLink>\n        </li>\n        <li className=\"nav-item\">\n          <NavLink className=\"nav-link\" to=\"./profile\">\n            Profile\n          </NavLink>\n        </li>\n        <li className=\"nav-item\">\n          <NavLink className=\"nav-link\" to=\"./logout\" onClick={logout}>\n            Logout {currentUser.username}\n          </NavLink>\n        </li>\n      </ul>\n    );\n  }\n\n  function loggedOutNav() {\n    return (\n      <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\n        <li className=\"nav-item\">\n          <NavLink className=\"nav-link\" to=\"./writespace\">\n            Writespace\n          </NavLink>\n        </li>\n        <li className=\"nav-item\">\n          <NavLink className=\"nav-link\" to=\"/signup\">\n            Sign Up\n          </NavLink>\n        </li>\n        <li className=\"nav-item\">\n          <NavLink className=\"nav-link\" to=\"/login\">\n            Log In\n          </NavLink>\n        </li>\n      </ul>\n    );\n  }\n\n  return (\n    <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n      <div className=\"container-fluid\">\n        <a className=\"navbar-brand\" href=\"/\">\n          Magnetik\n        </a>\n        <button\n          className=\"navbar-toggler\"\n          type=\"button\"\n          data-bs-toggle=\"collapse\"\n          data-bs-target=\"#navbarSupportedContent\"\n          aria-controls=\"navbarSupportedContent\"\n          aria-expanded=\"false\"\n          aria-label=\"Toggle navigation\"\n        >\n          <span className=\"navbar-toggler-icon\"></span>\n        </button>\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n          {currentUser ? loggedInNav() : loggedOutNav()}\n        </div>\n      </div>\n    </nav>\n  );\n}\n\nexport default Navigation;\n","import React, { useState, useEffect } from \"react\";\nimport Routes from \"./routes-nav/Routes\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport jwt from \"jsonwebtoken\";\nimport MagnetikApi from \"./api/MagnetikApi\";\nimport Navigation from \"./routes-nav/Navigation\";\nimport UserContext from \"./auth/UserContext\";\nimport useLocalStorage from \"./hooks/useLocalStorage\";\n\nimport \"./App.css\";\n\n/** Magnetik Application\n * State:\n * - currentUser\n * - token\n * - isLoaded\n * Methods:\n * - login\n * - logout\n * - signUp\n * Effects:\n * - loadUserInfo\n */\n\nfunction App() {\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [currentUser, setCurrentUser] = useState(null);\n  const [token, setToken] = useLocalStorage(\"token\");\n\n  useEffect(\n    function loadUserInfo() {\n      // console.debug(\"App useEffect loadUserInfo\", \"token=\", token);\n      async function getCurrentUser() {\n        if (token) {\n          try {\n            let { username } = jwt.decode(JSON.parse(token));\n            MagnetikApi.token = JSON.parse(token);\n            let currUser = await MagnetikApi.getCurrentUser(username);\n\n            setCurrentUser({ ...currUser });\n          } catch (err) {\n            console.error(\"App loadUserInfo: problem loading\", err);\n            setCurrentUser(null);\n          }\n        }\n        setIsLoaded(true);\n      }\n      setIsLoaded(false);\n      getCurrentUser();\n    },\n    [token]\n  );\n\n  async function signUp(signUpData) {\n    try {\n      let userToken = await MagnetikApi.register(signUpData);\n      setToken(JSON.stringify(userToken));\n      return { success: true };\n    } catch (errors) {\n      console.error(\"signup failed\", errors);\n      return { success: false, errors };\n    }\n  }\n\n  async function login(loginData) {\n    try {\n      let userToken = await MagnetikApi.login(loginData);\n      setToken(JSON.stringify(userToken));\n      return { success: true };\n    } catch (errors) {\n      console.error(\"login failed\", errors);\n      return { success: false, errors };\n    }\n  }\n\n  function logout() {\n    setCurrentUser(null);\n    setToken(null);\n  }\n\n  if (!isLoaded) return <h1>Loading...</h1>;\n\n  return (\n    <div className=\"App\">\n      <BrowserRouter>\n        <UserContext.Provider value={{ currentUser, setCurrentUser }}>\n          <Navigation logout={logout} />\n          <Routes login={login} register={signUp} />\n        </UserContext.Provider>\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}